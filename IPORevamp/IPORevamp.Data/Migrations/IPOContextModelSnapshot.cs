// <auto-generated />
using System;
using IPORevamp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPORevamp.Data.Migrations
{
    [DbContext(typeof(IPOContext))]
    partial class IPOContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IPORevamp.Data.Entities.AuditTrail.AuditTrail", b =>
                {
                    b.Property<int>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTaken");

                    b.Property<int>("ApplicationTypeId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<string>("Entity");

                    b.Property<int>("Id");

                    b.Property<string>("IpAddress");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("RecordAfter");

                    b.Property<string>("RecordBefore");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("AuditID");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Country.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("EnableForOtherCountry");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.DSApplicationStatus.DSApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DSApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Email.EmailLog", b =>
                {
                    b.Property<int>("EmailLogID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentLoc");

                    b.Property<string>("BCC");

                    b.Property<string>("CC");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateSent");

                    b.Property<DateTime>("DateToSend");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("HasAttachements");

                    b.Property<int>("Id");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("MailBody");

                    b.Property<string>("Receiver");

                    b.Property<byte[]>("RowVersion");

                    b.Property<bool>("SendImmediately");

                    b.Property<string>("Sender");

                    b.Property<int>("Status");

                    b.Property<string>("Subject");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("EmailLogID");

                    b.ToTable("EmailLog");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Email.EmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("EmailBody");

                    b.Property<string>("EmailName");

                    b.Property<string>("EmailSender");

                    b.Property<string>("EmailSubject");

                    b.Property<int?>("EmailTemplateType");

                    b.Property<int>("Id");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("EmailTemplateID");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Fee.FeeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemCode")
                        .IsRequired();

                    b.Property<string>("ItemName")
                        .IsRequired();

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("QTCode")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion");

                    b.Property<decimal>("TechnologyFee");

                    b.Property<string>("UpdatedBy");

                    b.Property<decimal>("init_amt");

                    b.HasKey("Id");

                    b.ToTable("FeeList");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.LGAs.LGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LGAName");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<int>("StateId");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("LGAs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Badge");

                    b.Property<string>("BadgeClass");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsExternalLink");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int?>("MenuId");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<string>("Roles");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.MenuManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("MenuManager");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int?>("MenuId");

                    b.Property<int?>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.BillLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("BillRefenceNo");

                    b.Property<int>("BillStatus");

                    b.Property<int>("BillType");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DatePaid");

                    b.Property<string>("DeletedBy");

                    b.Property<int?>("EntityId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PaymentMethod");

                    b.Property<string>("RRR");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BillLogs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.PaymentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("BillId");

                    b.Property<int?>("BillLogId");

                    b.Property<string>("CardNumber");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int?>("EntityId");

                    b.Property<decimal>("FinalAmount");

                    b.Property<decimal>("GateWayAmount");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("MembershipNo");

                    b.Property<int>("PaymenType");

                    b.Property<decimal>("PaymentCharges");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<string>("PaymentReferenceNo");

                    b.Property<int>("PaymentStatus");

                    b.Property<string>("ResponseCode");

                    b.Property<string>("ResponseDescription");

                    b.Property<string>("ResponsePayload");

                    b.Property<byte[]>("RowVersion");

                    b.Property<decimal>("TechFee");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BillLogId");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentLogs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.PTApplicationStatus.PTApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("PTApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.RemitaAccountSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeneficiaryAccount");

                    b.Property<string>("BeneficiaryBank");

                    b.Property<string>("BeneficiaryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeductFee");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaAccountSplit");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.RemitaBankCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode");

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaBankCode");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Setting.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<string>("AccountTypeCode");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Setting.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemName");

                    b.Property<string>("ItemValue");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("SettingCode");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StateName");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.TMApplicationStatus.TMApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("TMApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.ApplicationType.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.AddressOfService.AddressOfService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("AttorneyCode");

                    b.Property<string>("AttorneyName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<string>("PhoneNumber");

                    b.Property<byte[]>("RowVersion");

                    b.Property<int>("StateID");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PatentApplicationID");

                    b.HasIndex("StateID");

                    b.ToTable("AddressOfService");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.ApplicationHistory.TrademarkApplicationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptanceFilePath");

                    b.Property<int>("ApplicationID");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("FromDataStatus");

                    b.Property<string>("FromStatus");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("RefusalFilePath");

                    b.Property<string>("Role");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ToDataStatus");

                    b.Property<string>("ToStatus");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UploadsPath1");

                    b.Property<string>("UploadsPath2");

                    b.Property<string>("description");

                    b.Property<string>("trademarkcomment");

                    b.Property<int>("userid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationID");

                    b.ToTable("TrademarkApplicationHistory");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Batch.PublicationBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchNo");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("NumberOfApplication");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("PublicationBatch");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Certificate.PayCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantAddress");

                    b.Property<string>("ApplicantName");

                    b.Property<string>("ApplicationId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PaymentReference");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("quantity");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.ToTable("PayCertificate");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Comments.TrademarkComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("pwalletid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.ToTable("TrademarkComments");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DelegateJob.DelegateDesignJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("applicationstage");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("DesignApplicationID");

                    b.ToTable("DelegateDesignJob");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DelegateJob.DelegateJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("applicationstage");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("PatentApplicationID");

                    b.ToTable("DelegateJob");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Department.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignAddressOfService.DesignAddressOfService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("AttorneyCode");

                    b.Property<string>("AttorneyName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<byte[]>("RowVersion");

                    b.Property<int>("StateID");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("DesignApplicationID");

                    b.HasIndex("StateID");

                    b.ToTable("DesignAddressOfService");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationStatus");

                    b.Property<string>("CertificatePayReference");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DataStatus");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.ToTable("DesignApplication");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignDataResult", b =>
                {
                    b.Property<string>("sn")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicationId");

                    b.Property<string>("AssigneeAddress");

                    b.Property<string>("AssigneeCountry");

                    b.Property<string>("AssigneeName");

                    b.Property<string>("AssignorAddress");

                    b.Property<string>("AssignorCountry");

                    b.Property<string>("AssignorName");

                    b.Property<string>("ClassDescription");

                    b.Property<string>("DeedOfAssignment");

                    b.Property<string>("DesignDescription");

                    b.Property<string>("DesignType");

                    b.Property<string>("Filenumber");

                    b.Property<DateTime>("FilingDate");

                    b.Property<string>("LetterOfAuthorization");

                    b.Property<int>("NationClassID");

                    b.Property<string>("NoveltyStatement");

                    b.Property<string>("PriorityDocument");

                    b.Property<string>("RepresentationOfDesign1");

                    b.Property<string>("RepresentationOfDesign2");

                    b.Property<string>("RepresentationOfDesign3");

                    b.Property<string>("RepresentationOfDesign4");

                    b.Property<string>("Status");

                    b.Property<string>("TitleOfInvention");

                    b.Property<string>("Transactionid");

                    b.Property<string>("datastatus");

                    b.HasKey("sn");

                    b.ToTable("DesignDataResult");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignApplicationHistory.DesignApplicationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptanceFilePath");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<string>("FromDataStatus");

                    b.Property<string>("FromStatus");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("RefusalFilePath");

                    b.Property<string>("Role");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ToDataStatus");

                    b.Property<string>("ToStatus");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UploadsPath1");

                    b.Property<string>("UploadsPath2");

                    b.Property<string>("description");

                    b.Property<string>("patentcomment");

                    b.Property<int>("userid");

                    b.HasKey("Id");

                    b.HasIndex("DesignApplicationID");

                    b.ToTable("DesignApplicationHistory");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignAssigment.DesignAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssigneeAddress");

                    b.Property<string>("AssigneeName");

                    b.Property<int>("AssigneeNationalityId");

                    b.Property<string>("AssignorAddress");

                    b.Property<string>("AssignorName");

                    b.Property<int>("AssignorNationalityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateOfAssignment");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeNationalityId");

                    b.HasIndex("AssignorNationalityId");

                    b.HasIndex("DesignApplicationID");

                    b.ToTable("DesignAssignment");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignInformation.DesignInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeedOfAssignment");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<string>("DesignDescription");

                    b.Property<int>("DesignTypeID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LetterOfAuthorization");

                    b.Property<int>("NationClassID");

                    b.Property<int?>("NationalClassId");

                    b.Property<string>("NoveltyStatement");

                    b.Property<string>("PriorityDocument");

                    b.Property<string>("RegistrationNumber");

                    b.Property<string>("RepresentationOfDesign1");

                    b.Property<string>("RepresentationOfDesign2");

                    b.Property<string>("RepresentationOfDesign3");

                    b.Property<string>("RepresentationOfDesign4");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("TitleOfDesign");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("DesignApplicationID");

                    b.HasIndex("DesignTypeID");

                    b.HasIndex("NationalClassId");

                    b.ToTable("DesignInformation");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignInvention.DesignInvention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<string>("InventorAddress");

                    b.Property<string>("InventorEmail");

                    b.Property<string>("InventorMobileNumber");

                    b.Property<string>("InventorName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DesignApplicationID");

                    b.ToTable("DesignInvention");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignPriority.DesignPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber");

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DesignApplicationID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DesignApplicationID");

                    b.ToTable("DesignPriority");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignType.DesignType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DesignType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.FeeDetail.FeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("feelistid");

                    b.Property<double>("initial_amount");

                    b.Property<double>("tech_amount");

                    b.Property<double>("total_amount");

                    b.Property<int>("twalletid");

                    b.HasKey("Id");

                    b.HasIndex("feelistid");

                    b.ToTable("FeeDetail");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.MarkInfo.MarkInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalDocument");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LogoPicture");

                    b.Property<string>("NationClassID");

                    b.Property<string>("NiceClass");

                    b.Property<string>("NiceClassDescription");

                    b.Property<string>("ProductTitle")
                        .IsRequired();

                    b.Property<string>("RegistrationNumber");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("SupportDocument1");

                    b.Property<string>("SupportDocument2");

                    b.Property<int>("TradeMarkTypeID");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("applicationid");

                    b.Property<string>("logo_descriptionID");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("TradeMarkTypeID");

                    b.HasIndex("applicationid");

                    b.ToTable("MarkInformation");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Ministry.Ministry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Ministry");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.National_Class.NationalClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("NationalClass");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Opposition.CounterOpposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantAddress");

                    b.Property<string>("ApplicantName");

                    b.Property<int>("ApplicationId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PaymentReference");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("Upload");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("CounterOpposition");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Opposition.NoticeOfOpposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PaymentReference");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("Upload");

                    b.Property<string>("opponentAddress");

                    b.Property<string>("opponentName");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("NoticeOfOpposition");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationStatus");

                    b.Property<string>("CertificatePayReference");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DataStatus");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.ToTable("PatentApplication");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentDataResult", b =>
                {
                    b.Property<string>("sn")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicationId");

                    b.Property<string>("AssigneeAddress");

                    b.Property<string>("AssigneeCountry");

                    b.Property<string>("AssigneeName");

                    b.Property<string>("AssignorAddress");

                    b.Property<string>("AssignorCountry");

                    b.Property<string>("AssignorName");

                    b.Property<string>("Claims");

                    b.Property<string>("CompleteSpecificationForm");

                    b.Property<string>("DeedOfAssignment");

                    b.Property<string>("Filenumber");

                    b.Property<DateTime>("FilingDate");

                    b.Property<string>("InventionDescription");

                    b.Property<string>("LetterOfAuthorization");

                    b.Property<string>("PatentType");

                    b.Property<string>("PctDocument");

                    b.Property<string>("Status");

                    b.Property<string>("TitleOfInvention");

                    b.Property<string>("Transactionid");

                    b.Property<string>("datastatus");

                    b.HasKey("sn");

                    b.ToTable("PatentDataResult");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentApplicationHistory.PatentApplicationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptanceFilePath");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int?>("DesignApplicationId");

                    b.Property<string>("FromDataStatus");

                    b.Property<string>("FromStatus");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<string>("RefusalFilePath");

                    b.Property<string>("Role");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ToDataStatus");

                    b.Property<string>("ToStatus");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UploadsPath1");

                    b.Property<string>("UploadsPath2");

                    b.Property<string>("description");

                    b.Property<string>("patentcomment");

                    b.Property<int>("userid");

                    b.HasKey("Id");

                    b.HasIndex("DesignApplicationId");

                    b.HasIndex("PatentApplicationID");

                    b.ToTable("PatentApplicationHistory");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentAssignment.PatentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssigneeAddress");

                    b.Property<string>("AssigneeName");

                    b.Property<int>("AssigneeNationalityId");

                    b.Property<string>("AssignorAddress");

                    b.Property<string>("AssignorName");

                    b.Property<int>("AssignorNationalityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateOfAssignment");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeNationalityId");

                    b.HasIndex("AssignorNationalityId");

                    b.HasIndex("PatentApplicationID");

                    b.ToTable("PatentAssignment");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentInformation.PatentInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Claims");

                    b.Property<string>("CompleteSpecificationForm");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeedOfAssignment");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("InventionDescription");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LetterOfAuthorization");

                    b.Property<int>("PatentApplicationID");

                    b.Property<int>("PatentTypeID");

                    b.Property<string>("PctDocument");

                    b.Property<string>("RegistrationNumber");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("TitleOfInvention");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PatentApplicationID");

                    b.HasIndex("PatentTypeID");

                    b.ToTable("PatentInformation");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentInvention.PatentInvention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("InventorAddress");

                    b.Property<string>("InventorEmail");

                    b.Property<string>("InventorMobileNumber");

                    b.Property<string>("InventorName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PatentApplicationID");

                    b.ToTable("PatentInvention");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentPriorityInformation.PatentPriorityInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber");

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PatentApplicationID");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PatentApplicationID");

                    b.ToTable("PatentPriorityInformation");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentType.PatentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("PatentType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<double>("Quantity");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("pay_reference");

                    b.Property<string>("payment_mode");

                    b.Property<string>("payment_status");

                    b.Property<int>("productid");

                    b.Property<string>("transaction_reference");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("productid");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Product.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationStatus");

                    b.Property<int>("Applicationtypeid");

                    b.Property<string>("Batchno");

                    b.Property<string>("CertificatePayReference");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DataStatus");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<DateTime?>("NextRenewalDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("RtNumber");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("Applicationtypeid");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Recordal.RecordalMerger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssigneeAddress");

                    b.Property<string>("AssigneeName");

                    b.Property<int>("AssigneeNationality");

                    b.Property<string>("AssignorAddress");

                    b.Property<string>("AssignorName");

                    b.Property<string>("Certificate");

                    b.Property<int?>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DateOfAssignment");

                    b.Property<string>("DeedOfAssigment");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("DetailOfRequest");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PaymentReference");

                    b.Property<string>("PowerOfAttorney");

                    b.Property<string>("PreviousApplicationStatus");

                    b.Property<string>("PreviousDataStatus");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("applicationid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("applicationid");

                    b.ToTable("RecordalMerger");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Recordal.RecordalRenewal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantAddress");

                    b.Property<string>("ApplicantName");

                    b.Property<string>("CertificateOfTrademark");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("DetailOfRequest");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("PaymentReference");

                    b.Property<string>("PowerOfAttorney");

                    b.Property<string>("PreviousApplicationStatus");

                    b.Property<string>("PreviousDataStatus");

                    b.Property<DateTime>("RenewalDueDate");

                    b.Property<string>("RenewalType");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Status");

                    b.Property<string>("TrademarkTitle");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("applicationid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("applicationid");

                    b.ToTable("RecordalRenewal");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("orderId");

                    b.Property<string>("type");

                    b.Property<string>("value");

                    b.HasKey("Id");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode");

                    b.Property<string>("BeneficiaryAccount");

                    b.Property<string>("BeneficiaryAmount");

                    b.Property<string>("BeneficiaryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeductFeeFrom");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LineItemsId");

                    b.Property<string>("OrderId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.RemitaPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<string>("Channel");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<int>("FeeId");

                    b.Property<string>("FeeItemName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("OrderId");

                    b.Property<string>("PayerEmail");

                    b.Property<string>("PayerName");

                    b.Property<string>("PayerPhone");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<int>("PaymentPurposeId");

                    b.Property<int>("PaymentStatus");

                    b.Property<string>("RRR");

                    b.Property<string>("RRRCode");

                    b.Property<string>("RemitaPostPayLoad");

                    b.Property<string>("RemitaPostVerifyPayLoad");

                    b.Property<string>("RemitaResponsePayLoad");

                    b.Property<string>("RemitaResponseVerifyPayLoad");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ServiceTypeId");

                    b.Property<string>("Status");

                    b.Property<string>("Statuscode");

                    b.Property<decimal?>("TechFee");

                    b.Property<string>("TotalAmount");

                    b.Property<DateTime>("TransactionCompletedDate");

                    b.Property<DateTime>("TransactionInitiatedDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaPayments");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.LinkRolesMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("MenusId");

                    b.Property<int>("RolesId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenusId");

                    b.HasIndex("RolesId");

                    b.ToTable("LinkRolesMenus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RoleManager");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Search.DataResult", b =>
                {
                    b.Property<string>("sn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicantAddress");

                    b.Property<string>("ApplicantName");

                    b.Property<string>("Applicationclass");

                    b.Property<string>("BatCount");

                    b.Property<string>("Filenumber");

                    b.Property<DateTime>("FilingDate");

                    b.Property<string>("NextrenewalDate");

                    b.Property<string>("ProductTitle");

                    b.Property<string>("Transactionid");

                    b.Property<string>("attach_doc");

                    b.Property<string>("auth_doc");

                    b.Property<string>("certificatePaymentReference");

                    b.Property<string>("classdescription");

                    b.Property<string>("comment");

                    b.Property<string>("commentby");

                    b.Property<string>("datastatus");

                    b.Property<string>("email");

                    b.Property<string>("logo_pic");

                    b.Property<string>("phonenumber");

                    b.Property<int>("pwalletid");

                    b.Property<string>("renewalid");

                    b.Property<string>("renewalstatus");

                    b.Property<string>("status");

                    b.Property<string>("sup_doc1");

                    b.Property<string>("sup_doc2");

                    b.Property<string>("trademarktype");

                    b.Property<string>("userid");

                    b.HasKey("sn");

                    b.ToTable("DataResult");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Search.PreviousComments", b =>
                {
                    b.Property<string>("Sn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("Role");

                    b.Property<string>("UploadPath");

                    b.Property<string>("users");

                    b.HasKey("Sn");

                    b.ToTable("PreviousComments");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Sms.SmsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("message");

                    b.Property<string>("mobilenumber");

                    b.Property<string>("sender");

                    b.Property<string>("status");

                    b.Property<string>("useremail");

                    b.Property<string>("username");

                    b.HasKey("Id");

                    b.ToTable("SmsLog");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.TrademarkLogo.TrademarkLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("TrademarkLogo");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.TrademarkType.TrademarkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("TrademarkType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Twallet.Twallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("feelistid");

                    b.Property<string>("pay_ref");

                    b.Property<int>("paymentid");

                    b.Property<string>("transaction_status");

                    b.Property<string>("transactionid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("feelistid");

                    b.HasIndex("paymentid");

                    b.ToTable("TradeMarkwallet");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Unit.Units", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.PreliminarySearch.PreliminarySearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("first_name");

                    b.Property<string>("last_name");

                    b.Property<string>("payment_reference");

                    b.Property<string>("product");

                    b.Property<int>("sectorid");

                    b.Property<string>("status");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("sectorid");

                    b.ToTable("PreliminarySearch");
                });

            modelBuilder.Entity("IPORevamp.Data.TempModel.UserVerificationTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("City");

                    b.Property<DateTime?>("ConfirmationDate");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("ExpiringDate");

                    b.Property<string>("First_Name");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Last_Name");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Postal");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("State");

                    b.Property<string>("Status");

                    b.Property<string>("Street");

                    b.Property<string>("Unit");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("department");

                    b.Property<bool>("expired");

                    b.Property<string>("ministry");

                    b.Property<string>("staffid");

                    b.HasKey("Id");

                    b.ToTable("UserVerificationTemp");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Bio");

                    b.Property<int>("CategoryId");

                    b.Property<bool>("ChangePassword");

                    b.Property<bool>("ChangePasswordFirstLogin");

                    b.Property<string>("City");

                    b.Property<bool>("CompleteRegistration");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("CountryCode");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EmployerName");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("LastPasswordChangDate");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Lga_Id");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MeansOfIdentification_value");

                    b.Property<string>("MiddleName");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Nationality");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("Occupation");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PostalCode");

                    b.Property<string>("ProfilePicLoc");

                    b.Property<string>("Rcno");

                    b.Property<string>("ResidentialAddress");

                    b.Property<int?>("RolesId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<int>("Title");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("Website");

                    b.Property<string>("department");

                    b.Property<string>("ministry");

                    b.Property<string>("staffid");

                    b.Property<string>("unit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RolesId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.LGAs.LGA", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("LGA")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.State", "State")
                        .WithMany("LGA")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.Menu", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.Menu")
                        .WithMany("Submenu")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.RoleMenu", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole", "Role")
                        .WithMany("Menus")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.BillLog", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.PaymentLog", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Payment.BillLog")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("BillLogId");

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.State", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.AddressOfService.AddressOfService", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("AddressOfService")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.State", "State")
                        .WithMany("AddressOfService")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.ApplicationHistory.TrademarkApplicationHistory", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("TrademarkApplicationHistory")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DelegateJob.DelegateDesignJob", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DelegateDesignJob")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DelegateJob.DelegateJob", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("DelegateJob")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignAddressOfService.DesignAddressOfService", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DesignAddressOfService")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.State", "State")
                        .WithMany("DesignAddressOfService")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignApplicationHistory.DesignApplicationHistory", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany()
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignAssigment.DesignAssignment", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "AssigneeNationality2")
                        .WithMany("AssigneeNationality2")
                        .HasForeignKey("AssigneeNationalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "AssignorNationality2")
                        .WithMany("AssignorNationality2")
                        .HasForeignKey("AssignorNationalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DesignAssignment")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignInformation.DesignInformation", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DesignInformation")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignType.DesignType", "DesignType")
                        .WithMany("DesignInformation")
                        .HasForeignKey("DesignTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.National_Class.NationalClass", "NationalClass")
                        .WithMany("DesignInformation")
                        .HasForeignKey("NationalClassId");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignInvention.DesignInvention", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("DesignInvention")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DesignInvention")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.DesignPriority.DesignPriority", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("DesignPriority")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication", "DesignApplication")
                        .WithMany("DesignPriority")
                        .HasForeignKey("DesignApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.FeeDetail.FeeDetail", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Fee.FeeList", "FeeList")
                        .WithMany("feedetail")
                        .HasForeignKey("feelistid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.MarkInfo.MarkInformation", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.TrademarkType.TrademarkType", "trademarktype")
                        .WithMany("MarkInfo")
                        .HasForeignKey("TradeMarkTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("Mark_Info")
                        .HasForeignKey("applicationid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Opposition.CounterOpposition", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "Application")
                        .WithMany("CounterOpposition")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Opposition.NoticeOfOpposition", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "Application")
                        .WithMany("NoticeOfOpposition")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentApplicationHistory.PatentApplicationHistory", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.DesignApplication.DesignApplication")
                        .WithMany("PatentApplicationHistory")
                        .HasForeignKey("DesignApplicationId");

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("PatentApplicationHistory")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentAssignment.PatentAssignment", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "AssigneeNationality")
                        .WithMany("AssigneeNationality")
                        .HasForeignKey("AssigneeNationalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "AssignorNationality")
                        .WithMany("AssignorNationality")
                        .HasForeignKey("AssignorNationalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("PatentAssignment")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentInformation.PatentInformation", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("PatentInformation")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentType.PatentType", "PatentType")
                        .WithMany("PatentInformation")
                        .HasForeignKey("PatentTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentInvention.PatentInvention", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("PatentInvention")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("PatentInvention")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.PatentPriorityInformation.PatentPriorityInformation", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("PatentPriorityInformation")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.PatentApplication.PatentApplication", "PatentApplication")
                        .WithMany("PatentPriorityInformation")
                        .HasForeignKey("PatentApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Product.Product", "Product")
                        .WithMany("Payment")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.ApplicationType.ApplicationType", "ApplicationType")
                        .WithMany("pwallet")
                        .HasForeignKey("Applicationtypeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Recordal.RecordalMerger", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("RecordalMerger")
                        .HasForeignKey("CountryId");

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("RecordalMerger")
                        .HasForeignKey("applicationid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Recordal.RecordalRenewal", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("RecordalRenewal")
                        .HasForeignKey("applicationid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.LinkRolesMenus", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.MenuManager", "Menus")
                        .WithMany("LinkRolesMenus")
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", "Roles")
                        .WithMany("LinkRolesMenus")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Twallet.Twallet", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Fee.FeeList", "FeeList")
                        .WithMany("twallet")
                        .HasForeignKey("feelistid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", "Payment")
                        .WithMany("twallet")
                        .HasForeignKey("paymentid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Unit.Units", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Department.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.PreliminarySearch.PreliminarySearch", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Sector", "Sector")
                        .WithMany("PreliminarySearch")
                        .HasForeignKey("sectorid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUser", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", "Roles")
                        .WithMany("Admins")
                        .HasForeignKey("RolesId");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserClaim", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserLogin", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserRole", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
