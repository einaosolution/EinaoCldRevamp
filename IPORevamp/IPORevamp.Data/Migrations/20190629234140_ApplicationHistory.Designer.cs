// <auto-generated />
using System;
using IPORevamp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPORevamp.Data.Migrations
{
    [DbContext(typeof(IPOContext))]
    [Migration("20190629234140_ApplicationHistory")]
    partial class ApplicationHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IPORevamp.Data.Entities.AuditTrail.AuditTrail", b =>
                {
                    b.Property<int>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTaken");

                    b.Property<int>("ApplicationTypeId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<string>("Entity");

                    b.Property<int>("Id");

                    b.Property<string>("IpAddress");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("RecordAfter");

                    b.Property<string>("RecordBefore");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("AuditID");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Country.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("EnableForOtherCountry");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.DSApplicationStatus.DSApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("DSApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Email.EmailLog", b =>
                {
                    b.Property<int>("EmailLogID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentLoc");

                    b.Property<string>("BCC");

                    b.Property<string>("CC");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateSent");

                    b.Property<DateTime>("DateToSend");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("HasAttachements");

                    b.Property<int>("Id");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("MailBody");

                    b.Property<string>("Receiver");

                    b.Property<byte[]>("RowVersion");

                    b.Property<bool>("SendImmediately");

                    b.Property<string>("Sender");

                    b.Property<int>("Status");

                    b.Property<string>("Subject");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("EmailLogID");

                    b.ToTable("EmailLog");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Email.EmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("EmailBody");

                    b.Property<string>("EmailName");

                    b.Property<string>("EmailSender");

                    b.Property<string>("EmailSubject");

                    b.Property<int?>("EmailTemplateType");

                    b.Property<int>("Id");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("EmailTemplateID");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Fee.FeeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemCode")
                        .IsRequired();

                    b.Property<string>("ItemName")
                        .IsRequired();

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("QTCode")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion");

                    b.Property<decimal>("TechnologyFee");

                    b.Property<string>("UpdatedBy");

                    b.Property<decimal>("init_amt");

                    b.HasKey("Id");

                    b.ToTable("FeeList");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.LGAs.LGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LGAName");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<int>("StateId");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("LGAs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Badge");

                    b.Property<string>("BadgeClass");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsExternalLink");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int?>("MenuId");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<string>("Roles");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.MenuManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("MenuManager");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int?>("MenuId");

                    b.Property<int?>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.BillLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("BillRefenceNo");

                    b.Property<int>("BillStatus");

                    b.Property<int>("BillType");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DatePaid");

                    b.Property<string>("DeletedBy");

                    b.Property<int?>("EntityId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("PaymentMethod");

                    b.Property<string>("RRR");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BillLogs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.PaymentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("BillId");

                    b.Property<int?>("BillLogId");

                    b.Property<string>("CardNumber");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int?>("EntityId");

                    b.Property<decimal>("FinalAmount");

                    b.Property<decimal>("GateWayAmount");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("MembershipNo");

                    b.Property<int>("PaymenType");

                    b.Property<decimal>("PaymentCharges");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<string>("PaymentReferenceNo");

                    b.Property<int>("PaymentStatus");

                    b.Property<string>("ResponseCode");

                    b.Property<string>("ResponseDescription");

                    b.Property<string>("ResponsePayload");

                    b.Property<byte[]>("RowVersion");

                    b.Property<decimal>("TechFee");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BillLogId");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentLogs");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.PTApplicationStatus.PTApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("PTApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.RemitaAccountSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeneficiaryAccount");

                    b.Property<string>("BeneficiaryBank");

                    b.Property<string>("BeneficiaryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeductFee");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaAccountSplit");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.RemitaBankCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode");

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaBankCode");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Setting.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<string>("AccountTypeCode");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Setting.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemName");

                    b.Property<string>("ItemValue");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("SettingCode");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StateName");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.TMApplicationStatus.TMApplicationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("StatusDescription")
                        .IsRequired();

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("TMApplicationStatus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.ApplicationType.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.ApplicationHistory.TrademarkApplicationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationID");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("FromDataStatus");

                    b.Property<string>("FromStatus");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ToDataStatus");

                    b.Property<string>("ToStatus");

                    b.Property<string>("TransactionID");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UploadsPath1");

                    b.Property<string>("UploadsPath2");

                    b.Property<string>("description");

                    b.Property<string>("trademarkcomment");

                    b.Property<int>("userid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationID");

                    b.ToTable("TrademarkApplicationHistory");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Department.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.FeeDetail.FeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("feelistid");

                    b.Property<double>("initial_amount");

                    b.Property<double>("tech_amount");

                    b.Property<double>("total_amount");

                    b.Property<int>("twalletid");

                    b.HasKey("Id");

                    b.HasIndex("feelistid");

                    b.ToTable("FeeDetail");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.MarkInfo.MarkInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalDocument");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LogoPicture");

                    b.Property<string>("NationClassID");

                    b.Property<string>("NiceClass");

                    b.Property<string>("ProductTitle");

                    b.Property<string>("RegistrationNumber");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("SupportDocument1");

                    b.Property<string>("SupportDocument2");

                    b.Property<int>("TradeMarkTypeID");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("applicationid");

                    b.Property<string>("logo_descriptionID");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("TradeMarkTypeID");

                    b.HasIndex("applicationid");

                    b.ToTable("MarkInformation");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Ministry.Ministry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Ministry");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.National_Class.National_Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("National_Class");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<double>("Quantity");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("pay_reference");

                    b.Property<string>("payment_mode");

                    b.Property<string>("payment_status");

                    b.Property<int>("productid");

                    b.Property<string>("transaction_reference");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("productid");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Product.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Applicationtypeid");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("application_status");

                    b.Property<string>("data_status");

                    b.Property<string>("transactionid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("Applicationtypeid");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("orderId");

                    b.Property<string>("type");

                    b.Property<string>("value");

                    b.HasKey("Id");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode");

                    b.Property<string>("BeneficiaryAccount");

                    b.Property<string>("BeneficiaryAmount");

                    b.Property<string>("BeneficiaryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeductFeeFrom");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("LineItemsId");

                    b.Property<string>("OrderId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.RemitaPayment.RemitaPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<string>("Channel");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<int>("FeeId");

                    b.Property<string>("FeeItemName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("OrderId");

                    b.Property<string>("PayerEmail");

                    b.Property<string>("PayerName");

                    b.Property<string>("PayerPhone");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<int>("PaymentPurposeId");

                    b.Property<int>("PaymentStatus");

                    b.Property<string>("RRR");

                    b.Property<string>("RRRCode");

                    b.Property<string>("RemitaPostPayLoad");

                    b.Property<string>("RemitaPostVerifyPayLoad");

                    b.Property<string>("RemitaResponsePayLoad");

                    b.Property<string>("RemitaResponseVerifyPayLoad");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("ServiceTypeId");

                    b.Property<string>("Status");

                    b.Property<string>("Statuscode");

                    b.Property<decimal?>("TechFee");

                    b.Property<string>("TotalAmount");

                    b.Property<DateTime>("TransactionCompletedDate");

                    b.Property<DateTime>("TransactionInitiatedDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RemitaPayments");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.LinkRolesMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<int>("MenusId");

                    b.Property<int>("RolesId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("MenusId");

                    b.HasIndex("RolesId");

                    b.ToTable("LinkRolesMenus");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("RoleManager");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Sms.SmsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("message");

                    b.Property<string>("mobilenumber");

                    b.Property<string>("sender");

                    b.Property<string>("status");

                    b.Property<string>("useremail");

                    b.Property<string>("username");

                    b.HasKey("Id");

                    b.ToTable("SmsLog");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.TrademarkType.TrademarkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("TrademarkType");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Twallet.Twallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<int>("feelistid");

                    b.Property<string>("pay_ref");

                    b.Property<int>("paymentid");

                    b.Property<string>("transaction_status");

                    b.Property<string>("transactionid");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.HasIndex("feelistid");

                    b.HasIndex("paymentid");

                    b.ToTable("Twallet");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Unit.Units", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.PreliminarySearch.PreliminarySearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("description");

                    b.Property<string>("first_name");

                    b.Property<string>("last_name");

                    b.Property<string>("payment_reference");

                    b.Property<string>("status");

                    b.Property<string>("type");

                    b.Property<string>("userid");

                    b.HasKey("Id");

                    b.ToTable("PreliminarySearch");
                });

            modelBuilder.Entity("IPORevamp.Data.TempModel.UserVerificationTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("City");

                    b.Property<DateTime?>("ConfirmationDate");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("ExpiringDate");

                    b.Property<string>("First_Name");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Last_Name");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Postal");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("State");

                    b.Property<string>("Status");

                    b.Property<string>("Street");

                    b.Property<string>("Unit");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("department");

                    b.Property<bool>("expired");

                    b.Property<string>("ministry");

                    b.Property<string>("staffid");

                    b.HasKey("Id");

                    b.ToTable("UserVerificationTemp");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Bio");

                    b.Property<int>("CategoryId");

                    b.Property<bool>("ChangePassword");

                    b.Property<bool>("ChangePasswordFirstLogin");

                    b.Property<string>("City");

                    b.Property<bool>("CompleteRegistration");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("CountryCode");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EmployerName");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("LastPasswordChangDate");

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Lga_Id");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MeansOfIdentification_value");

                    b.Property<string>("MiddleName");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Nationality");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("Occupation");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PostalCode");

                    b.Property<string>("ProfilePicLoc");

                    b.Property<string>("Rcno");

                    b.Property<string>("ResidentialAddress");

                    b.Property<int?>("RolesId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("State");

                    b.Property<int>("Title");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("Website");

                    b.Property<string>("department");

                    b.Property<string>("ministry");

                    b.Property<string>("staffid");

                    b.Property<string>("unit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RolesId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.LGAs.LGA", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("LGA")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entities.State", "State")
                        .WithMany("LGA")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.Menu", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.Menu")
                        .WithMany("Submenu")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Menus.RoleMenu", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole", "Role")
                        .WithMany("Menus")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.BillLog", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.Payment.PaymentLog", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Payment.BillLog")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("BillLogId");

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entities.State", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Country.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.ApplicationHistory.TrademarkApplicationHistory", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("TrademarkApplicationHistory")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.FeeDetail.FeeDetail", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Fee.FeeList", "FeeList")
                        .WithMany("feedetail")
                        .HasForeignKey("feelistid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.MarkInfo.MarkInformation", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.TrademarkType.TrademarkType", "trademarktype")
                        .WithMany("MarkInfo")
                        .HasForeignKey("TradeMarkTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", "application")
                        .WithMany("Mark_Info")
                        .HasForeignKey("applicationid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Product.Product", "Product")
                        .WithMany("Payment")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Pwallet.Application", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.ApplicationType.ApplicationType", "ApplicationType")
                        .WithMany("pwallet")
                        .HasForeignKey("Applicationtypeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Role.LinkRolesMenus", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Menus.MenuManager", "Menus")
                        .WithMany("LinkRolesMenus")
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", "Roles")
                        .WithMany("LinkRolesMenus")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Twallet.Twallet", b =>
                {
                    b.HasOne("IPORevamp.Data.Entities.Fee.FeeList", "FeeList")
                        .WithMany("twallet")
                        .HasForeignKey("feelistid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Payment.Payment", "Payment")
                        .WithMany("twallet")
                        .HasForeignKey("paymentid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.Entity.Interface.Entities.Unit.Units", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Department.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUser", b =>
                {
                    b.HasOne("IPORevamp.Data.Entity.Interface.Entities.Role.RoleManager", "Roles")
                        .WithMany("Admins")
                        .HasForeignKey("RolesId");
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserClaim", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserLogin", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IPORevamp.Data.UserManagement.Model.ApplicationUserRole", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("IPORevamp.Data.UserManagement.Model.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
